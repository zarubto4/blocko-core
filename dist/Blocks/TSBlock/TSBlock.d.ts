import * as Core from '../../Core/index';
import { ConnectorEvent } from '../../Core';
export declare class TSBlock extends Core.Block {
    private _tsCode;
    private _tsCodeError;
    private _machine;
    private _utilsLib;
    private _tsBlockLib;
    private _consoleLib;
    private _serviceLib;
    private _fetchLib;
    private _dbLib;
    protected _displayName: string;
    protected _backgroundColor: string;
    protected _description: string;
    canAddsIO: boolean;
    protected _designJson: string;
    constructor(id: string, tsCode?: string, designJson?: string);
    protected afterControllerSet(): void;
    protected onLog: (type: string, message: string) => void;
    readonly code: string;
    readonly codeError: boolean;
    readonly designJson: string;
    setDesignJson(designJson: string): void;
    remove(): void;
    setCode(tsCode: string): void;
    protected cleanBlock(): void;
    protected runError: (e: any) => void;
    private storedInputs;
    private storedOutputs;
    private storeConnections();
    private restoreConnections();
    run(safe?: boolean): void;
    configChanged(): void;
    protected inputChanged(event: ConnectorEvent): void;
    callReady(): void;
    rendererGetDisplayName(): string;
    rendererGetBlockBackgroundColor(): string;
    rendererGetBlockDescription(): string;
    rendererGetCodeName(): string;
    setError(enabled: boolean): void;
}
